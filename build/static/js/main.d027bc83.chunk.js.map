{"version":3,"sources":["components/layout/small-layouts/DiscussionGroups.jsx","context/messaging/messagingContext.js","components/layout/small-layouts/ChatMessage.jsx","components/layout/Messaging.jsx","components/layout/Home.jsx","components/layout/Navbar.jsx","context/messaging/messagingReducer.js","context/types.js","context/messaging/MessagingState.js","App.js","index.js","img/gc.jpg"],"names":["DiscussionGroups","props","title","joinRoom","Card","className","onClick","elevation","CardActionArea","src","roomPic","alt","height","messagingContext","createContext","ChatMessage","name","msg","classx","Avatar","Messaging","useContext","MessagingContext","rooms","conversations","sendMsg","username","setUsername","addRoom","stateSetRoomName","socketRef","useRef","useState","textValue","setTextValue","socketId","setSocketId","roomName","setRoomName","groupPath","window","location","pathname","useEffect","current","io","connect","on","emit","id","message","sendMessage","e","alert","msgObj","room","index","length","myRoom","console","log","Container","maxWidth","style","backgroundColor","Paper","TextField","label","InputProps","startAdornment","InputAdornment","position","fullWidth","variant","onChange","target","value","endAdornment","Button","onKeyPress","key","placeholder","Accordion","AccordionSummary","AccordionDetails","map","description","picture","onClickEnterRoom","conversation","IconButton","Home","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","borderRadius","shape","fade","palette","common","white","marginLeft","width","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","currentRoomName","AppBar","Toolbar","Typography","noWrap","InputBase","input","inputProps","disabled","state","action","type","payload","MessagingState","useReducer","MessagingReducer","users","dispatch","addConversation","convo","Provider","temp","children","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d027bc83.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport roomPic from \"../../../img/gc.jpg\";\r\n\r\nconst DiscussionGroups = (props) => {\r\n  const { title, joinRoom } = props;\r\n\r\n  // const month = new Date().getMonth();\r\n  // const day = new Date().getDate();\r\n  // const year = new Date().getFullYear();\r\n\r\n  // const hour = new Date().getHours();\r\n  // const minutes = new Date().getMinutes();\r\n  // const seconds = new Date().getSeconds()\r\n\r\n  return (\r\n    <Card\r\n      className=\"groupBox\"\r\n      onClick={() => {\r\n        joinRoom(title);\r\n      }}\r\n      elevation={3}\r\n    >\r\n      <CardActionArea>\r\n        <div className=\"discussion\">\r\n          <img src={roomPic} alt=\"default pic\" height=\"100px\" />\r\n\r\n          <div className=\"discussionInfo\">\r\n            <h2>{title}</h2>\r\n\r\n            {/* <p className=\"info\">\r\n              {month}-{day}-{year}\r\n            </p>\r\n            <p className=\"info\">\r\n              {hour}:{minutes}:{seconds}\r\n            </p> */}\r\n          </div>\r\n        </div>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DiscussionGroups;\r\n","import {createContext} from 'react'\r\n\r\nconst messagingContext = createContext()\r\n\r\nexport default messagingContext","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst ChatMessage = (props) => {\r\n  const { name, msg, classx} = props;\r\n\r\n  return (\r\n    <Card className={`chatBubble ${classx}`}>\r\n      <Avatar />\r\n      <div className=\"chatInfo\">\r\n        <h2>{name}</h2>\r\n        <div className={`msgContainer`}>{msg}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Group from \"./small-layouts/DiscussionGroups\";\r\nimport MessagingContext from \"../../context/messaging/messagingContext\";\r\nimport ChatMessage from \"./small-layouts/ChatMessage\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport io from \"socket.io-client\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Messaging = (props) => {\r\n  const messagingContext = useContext(MessagingContext);\r\n\r\n  const {\r\n    rooms,\r\n    conversations,\r\n    sendMsg,\r\n    username,\r\n    setUsername,\r\n    addRoom,\r\n    stateSetRoomName,\r\n  } = messagingContext;\r\n\r\n  const socketRef = useRef();\r\n  const [textValue, setTextValue] = useState(\"\");\r\n  const [socketId, setSocketId] = useState();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n\r\n  const groupPath = window.location.pathname;\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(\"/\");\r\n\r\n    socketRef.current.on(\"join\", () => {\r\n      socketRef.current.emit(\"set join\", groupPath);\r\n    });\r\n\r\n    socketRef.current.on(\"my id\", (id) => {\r\n      setSocketId(id);\r\n    });\r\n\r\n    socketRef.current.on(\"add conversation\", (message) => {\r\n      sendMsg(message);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const sendMessage = (e) => {\r\n    if (textValue === \"\" || username === \"\") {\r\n      alert(\"u have no messages or no username\");\r\n    } else {\r\n      let msgObj = {\r\n        msg: textValue,\r\n        id: socketId,\r\n        name: username,\r\n      };\r\n      socketRef.current.emit(\"message sent\", msgObj);\r\n      setTextValue(\"\");\r\n    }\r\n  };\r\n\r\n  const joinRoom = (room = null) => {\r\n    if (room === null) {\r\n      //if no room is provided, use the room in the textfield\r\n      if (roomName !== \"\") {\r\n        for (let index = 0; index < rooms.length; index++) {\r\n          if (rooms[index].title === roomName) {\r\n            alert(\"Room already exist, find the room below\");\r\n            return;\r\n          }\r\n        }\r\n\r\n        let myRoom = {\r\n          title: roomName,\r\n        };\r\n        addRoom(myRoom);\r\n        socketRef.current.emit(\"enter room\", roomName);\r\n        stateSetRoomName(roomName);\r\n      } else {\r\n        alert(\"Enter a room name\");\r\n      }\r\n    } else {\r\n      if (room !== \"\") {\r\n        for (let index = 0; index < rooms.length; index++) {\r\n          if (rooms[index].title === room) {\r\n            alert(\"Room already exist, find the room below\");\r\n            return;\r\n          }\r\n        }\r\n\r\n        let myRoom = {\r\n          title: room,\r\n        };\r\n        addRoom(myRoom);\r\n        socketRef.current.emit(\"enter room\", room);\r\n        stateSetRoomName(room);\r\n      } else {\r\n        alert(\"Enter a room name\");\r\n      }\r\n    }\r\n\r\n    console.log();\r\n  };\r\n\r\n  const onClickEnterRoom = (roomName) => {\r\n    socketRef.current.emit(\"enter room \", roomName);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      id=\"msg-container\"\r\n      maxWidth=\"lg\"\r\n      style={{ backgroundColor: \"#ffffff\" }}\r\n    >\r\n      <Paper className=\"grpChats\" style={{ backgroundColor: \"#fffafa\" }}>\r\n        <div className=\"input-container\">\r\n          <div className=\"inputField\">\r\n            <TextField\r\n              id=\"input-with-icon-textfield\"\r\n              label=\"Your Name\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AccountCircle />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n              variant=\"filled\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"inputField\">\r\n            <TextField\r\n              id=\"input-with-icon-textfield\"\r\n              label=\"Room Name\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <MeetingRoomIcon />\r\n                  </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        joinRoom();\r\n                      }}\r\n                    >\r\n                      <SendIcon />\r\n                    </Button>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onKeyPress={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  joinRoom();\r\n                }\r\n              }}\r\n              fullWidth\r\n              variant=\"filled\"\r\n              placeholder=\"Enter Room\"\r\n              onChange={(e) => {\r\n                setRoomName(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"users\">\r\n          {\" \"}\r\n          {/* users should be renamed to groups for clarity*/}\r\n          <Accordion>\r\n            <AccordionSummary>\r\n              <p>Your list of Groups</p>\r\n            </AccordionSummary>\r\n            <AccordionDetails className=\"accordionDetails\">\r\n              {rooms.length > 0 ? (\r\n                rooms.map((room) => (\r\n                  <Group\r\n                    title={room.title}\r\n                    description={room.description}\r\n                    picture={room.picture}\r\n                    key={room.title}\r\n                    joinRoom={() => {\r\n                      onClickEnterRoom();\r\n\r\n                      stateSetRoomName(room.title);\r\n                    }}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <p>No groups yet</p>\r\n              )}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      </Paper>\r\n\r\n      <div className=\"messaging\">\r\n        <Paper className=\"conversation\" style={{ backgroundColor: \"#d9ecf2\" }}>\r\n          {conversations.map((conversation) => {\r\n            return conversation.id === socketId ? (\r\n              <ChatMessage\r\n                name={conversation.name}\r\n                msg={conversation.msg}\r\n                classx=\"sent\"\r\n              />\r\n            ) : (\r\n              <ChatMessage\r\n                name={conversation.name}\r\n                msg={conversation.msg}\r\n                classx=\"received\"\r\n              />\r\n            );\r\n          })}\r\n        </Paper>\r\n        {/* css positions doesnt seem to work on the textField component here */}\r\n        <Paper className=\"msgField\" style={{ backgroundColor: \"#51adcf\" }}>\r\n          <TextField\r\n            fullWidth\r\n            value={textValue}\r\n            onKeyPress={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                sendMessage(e);\r\n              }\r\n            }}\r\n            onChange={(e) => {\r\n              setTextValue(e.target.value);\r\n            }}\r\n          />\r\n          <IconButton\r\n            onClick={(e) => {\r\n              sendMessage(e);\r\n            }}\r\n          >\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Messaging;\r\n","import React, {Fragment} from 'react'\r\nimport Messaging from './Messaging.jsx'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Fragment>\r\n           <Messaging /> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n ","import React, { useState, useContext } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nimport MessagingContext from \"../../context/messaging/messagingContext\";\r\n\r\n//Navbar Copy pasted from material ui docs w/ very minor tweeks\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  const messagingContext = useContext(MessagingContext);\r\n\r\n  const {currentRoomName} = messagingContext;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Group Chats\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <MeetingRoomIcon />\r\n            </div>\r\n            <InputBase\r\n              value={currentRoomName}\r\n              placeholder=\"Current Room\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              disabled\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { ADD_CONVERSATION, ADD_ROOM, SET_ROOMNAME, SET_USERNAME } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONVERSATION:\r\n      return {\r\n        ...state,\r\n        conversations: [...state.conversations, action.payload],\r\n      };\r\n\r\n    case SET_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.payload,\r\n      };\r\n\r\n    case ADD_ROOM:\r\n      return {\r\n        ...state,\r\n        rooms: [...state.rooms, action.payload]\r\n      }\r\n\r\n    case SET_ROOMNAME:\r\n      return {\r\n        ...state,\r\n        currentRoomName: action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_CONVERSATION = \"ADD_CONVERSATION\";\r\nexport const SET_USERNAME = \"SET_USERNAME\";\r\nexport const ADD_ROOM = \"ADD_ROOM\"\r\nexport const SET_ROOMNAME = \"SET_ROOMNAME\"","import React, { useReducer } from \"react\";\r\nimport MessagingContext from \"./messagingContext\";\r\nimport MessagingReducer from \"./messagingReducer\";\r\n// import dp from \"../../img/dp.jpg\";\r\n// import house from \"../../img/house.jpg\";\r\n// import potion from \"../../img/potion.jpg\";\r\n// import reng from \"../../img/reng.jpg\";\r\nimport {\r\n  ADD_CONVERSATION,\r\n  ADD_ROOM,\r\n  SET_USERNAME,\r\n  SET_ROOMNAME,\r\n} from \"../types\";\r\n\r\nconst MessagingState = (props) => {\r\n  const initialState = {\r\n    rooms: [],\r\n    users: [],\r\n    conversations: [],\r\n    username: \"\",\r\n    currentRoomName: \"Default Room\",\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(MessagingReducer, initialState);\r\n\r\n  const sendMsg = (msgObj) => {\r\n    // let name = Name;\r\n    // let msg = Msg;\r\n    let convo = {\r\n      name: msgObj.name,\r\n      msg: msgObj.msg,\r\n      id: msgObj.id,\r\n    };\r\n\r\n    addConversation(convo);\r\n  };\r\n\r\n  const addConversation = (convo) => {\r\n    dispatch({\r\n      type: ADD_CONVERSATION,\r\n      payload: convo,\r\n    });\r\n  };\r\n\r\n  const addRoom = (room) => {\r\n    dispatch({\r\n      type: ADD_ROOM,\r\n      payload: room,\r\n    });\r\n  };\r\n\r\n  const setUsername = (name) => {\r\n    dispatch({\r\n      type: SET_USERNAME,\r\n      payload: name,\r\n    });\r\n  };\r\n\r\n  const stateSetRoomName = (roomName) => {\r\n    dispatch({\r\n      type: SET_ROOMNAME,\r\n      payload: roomName,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MessagingContext.Provider\r\n      value={{\r\n        temp: state.temp,\r\n        rooms: state.rooms,\r\n        conversations: state.conversations,\r\n        username: state.username,\r\n        currentRoomName: state.currentRoomName,\r\n        sendMsg,\r\n        setUsername,\r\n        addRoom,\r\n        stateSetRoomName,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MessagingContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MessagingState;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Home from \"./components/layout/Home\";\nimport Navbar from \"./components/layout/Navbar\";\n\nimport MessagingState from \"./context/messaging/MessagingState\";\n\nfunction App() {\n  return (\n    <MessagingState>\n        <Navbar />\n        <Home />\n    </MessagingState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/gc.99752674.jpg\";"],"sourceRoot":""}